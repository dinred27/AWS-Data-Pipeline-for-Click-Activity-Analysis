# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Infrastructure Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  certificationslogpipelinelambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - arn:aws:lambda:us-east-2:336392948345:layer:AWSSDKPandas-Python39:27
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
                - dynamodb:ListTables
              Resource: '*'
            - Action:
                - s3:GetObject
                - s3:ListBucket
              Resource:
                - arn:aws:s3:::certifications-dinesh-logs
                - arn:aws:s3:::certifications-dinesh-logs/*
              Effect: Allow
            - Action:
                - glue:StartJobRun
              Resource: '*'
              Effect: Allow
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:ListBucket
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-2:050451405701:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-2:050451405701:log-group:/aws/lambda/certifications-log-pipeline-lambda:*
            - Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DeleteNetworkInterface
                - ec2:DescribeNetworkInterfaces
              Resource: '*'
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: cron(0 8 ? * 2 *)
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
